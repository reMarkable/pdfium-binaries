name: Build

on:
  push:
    branches:
    - '**'
  pull_request:
    branches:
    - '**'

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ["windows-2019"]
        # os: ["ubuntu-20.04", "windows-2019", [self-hosted, macOS, X64]]
        # Pdfium is developed alongside Chromium and does not provide releases
        # Upstream recommends using Chromium's dev channels instead
        # Extract pdfium branch name used in stable channel from omahaproxy and do
        # a checkout
        # git checkout "chromium/$(curl https://omahaproxy.appspot.com/linux?channel=stable | cut -d'.' -f 3)"
        # git checkout "chromium/$(curl https://omahaproxy.appspot.com/linux?channel=beta | cut -d'.' -f 3)"
        # git checkout "chromium/$(curl https://omahaproxy.appspot.com/linux?channel=dev | cut -d'.' -f 3)"
        chromium_version: ["chromium/4183"]

    continue-on-error: true

    steps:
      - uses: actions/checkout@v2

      - run: Write-Host "PDFium_V8=disabled" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        if: runner.os == 'Windows'

      - run: Write-Host "GYP_MSVS_VERSION=2019" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        if: runner.os == 'Windows'

      - run: Write-Host "PDFium_BRANCH=${{ matrix.chromium_version }}" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - run: Write-Host "CONFIGURATION=Release" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        if: runner.os == 'Windows'

      - run: Write-Host "PLATFORM=x86" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        if: runner.os == 'Windows'

# # platform:
# #   - x86
# #   - x64

      - run: .\build.bat

# artifacts:
#   - path: pdfium-*.zip
#     name: PDFium library
